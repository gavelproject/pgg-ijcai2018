/*******************************************************************************
 * MIT License
 *
 * Copyright (c) Igor Conrado Alves de Lima <igorcadelima@gmail.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *******************************************************************************/

defaultTasks 'run'

apply plugin: 'java'
apply plugin: 'eclipse'

version '1.0'
group   'org.jacamo'

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse {
	project {
		file {
			withXml {
				xmlProvider->
					def projectDescription = xmlProvider.asNode()
					def xmlParser = new XmlParser()
					def builders = projectDescription.buildSpec[0]
					def jacamoBuilder = xmlParser.createNode(builders, 'buildCommand', [:])
					xmlParser.createNode(jacamoBuilder, 'name', [:]).setValue('jacamoide.jacamoBuilder')
					xmlParser.createNode(jacamoBuilder, 'arguments', [:]);

				def natures = projectDescription.natures[0]
				def jacamoNature = xmlParser.createNode(null, 'nature', [:])
				jacamoNature.setValue('jacamoide.jacamoNature');
				natures.children().add(0, jacamoNature)
			}
		}
	}
}

repositories {
	mavenCentral()
	maven { url 'http://jacamo.sourceforge.net/maven2' }
	maven { url 'http://jade.tilab.com/maven/' }
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'org.jacamo:jacamo:latest.integration'
	implementation 'com.github.gavelproject:gavel-jacamo:master-SNAPSHOT'
	//implementation project(':gavel-jacamo')
}

sourceSets {
	main {
		java {
			srcDirs = ['src/agt','src/env','src/org','src/int']
		}
	}
}

task run (type: JavaExec, dependsOn: 'classes') {
	description 'runs the application'
	main = 'jacamo.infra.JaCaMoLauncher'
	args 'pgg.jcm'
	classpath sourceSets.main.runtimeClasspath
	enableAssertions=true
}

clean {
	delete 'bin'
	delete 'build'
}
